{"version":3,"sources":["../../src/middleware/Auth.js"],"names":["jwt","require","config","promisify","module","exports","req","res","next","authHeader","headers","authorization","status","json","message","token","split","decoded","verify","get","userId","id","err"],"mappings":"AAAA,MAAMA,MAAMC,QAAQ,cAAR,CAAZ;AACA,MAAMC,SAASD,QAAQ,QAAR,CAAf;;AAEA,MAAM,EAAEE,SAAF,KAAgBF,QAAQ,MAAR,CAAtB;;AAEAG,OAAOC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACzC,QAAMC,aAAaH,IAAII,OAAJ,CAAYC,aAA/B;;AAEA,MAAI,CAACF,UAAL,EAAiB;AACf,WAAOF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,oBAAX,EAArB,CAAP;AACD;;AAED,QAAM,GAAGC,KAAH,IAAYN,WAAWO,KAAX,CAAiB,GAAjB,CAAlB;;AAEA,MAAI;AACF,UAAMC,UAAU,MAAMd,UAAUH,IAAIkB,MAAd,EAAsBH,KAAtB,EAA6Bb,OAAOiB,GAAP,CAAW,QAAX,CAA7B,CAAtB;;AAEAb,QAAIc,MAAJ,GAAaH,QAAQI,EAArB;;AAEA,WAAOb,MAAP;AACD,GAND,CAME,OAAOc,GAAP,EAAY;AACZ,WAAOf,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,eAAX,EAArB,CAAP;AACD;AACF,CAlBD","file":"Auth.js","sourcesContent":["const jwt = require('jsonwebtoken')\nconst config = require('config')\n\nconst { promisify } = require('util')\n\nmodule.exports = async (req, res, next) => {\n  const authHeader = req.headers.authorization\n\n  if (!authHeader) {\n    return res.status(401).json({ message: 'Token not provided' })\n  }\n\n  const [, token] = authHeader.split(' ')\n\n  try {\n    const decoded = await promisify(jwt.verify)(token, config.get('secret'))\n\n    req.userId = decoded.id\n\n    return next()\n  } catch (err) {\n    return res.status(401).json({ message: 'Token invalid' })\n  }\n}\n"]}